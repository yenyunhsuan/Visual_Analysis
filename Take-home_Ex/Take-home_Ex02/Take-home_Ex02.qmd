---
title: "Take Home Exercise 2"
title-block-banner: true
format: 
  html: 
    code-fold: true
    code-summary: "Show the code"
editor: visual
author: Yen Yun Hsuan
date: "28 May 2023"
execute: 
  warning: false
---

# Background

This is [Mini-Challenge 2](https://vast-challenge.github.io/2023/MC2.html) of VAST Challenge 2023.

The country of Oceanus has sought FishEye International's help in identifying companies possibly engaged in illegal, unreported, and unregulated (IUU) fishing.

To facilitate their analysis, FishEye transformed the trade data into a knowledge graph. Using this knowledge graph, they hope to understand business relationships, including finding links that will help them stop IUU fishing and protect marine species that are affected by it. They are now looking for visualizations that provide more **detail about patterns for entities** in the knowledge graph.

# Task

FishEye knows from past experience that companies caught fishing illegally will shut down but will then often start up again under a different name. FishEye wants your help to use visual analytics to identify **temporal patterns** for individual entities and between entities in the knowledge graph FishEye created from trade records. Categorize the **types of business relationship patterns** you find. Limit your response to 600 words and 6 images.

# Data preparation

## Installing and launching R packages

```{r}
pacman::p_load(jsonlite, tidygraph, ggraph, visNetwork, lubridate, tidyverse, visNetwork,heatmaply,dply,ggplot2,ggpubr,RColorBrewer, igraph,clock,graphlayouts)
```

## Import data

```{r}
MC2 <- fromJSON("data/mc2_challenge_graph.json")
```

At the root-level, MC2 is a dictionary with graph-level properties specified as keys.

Below extract data frame from MC2 list as tibble table.

### Nodes

-   There are many NA values in shpcountry and rcvcountry columns, and it is hard to fill in those NA values, so exclude these two columns.

    ```{r}
    MC2_node <- as_tibble(MC2$nodes)  
    colSums(is.na(MC2_node))
    ```

-   Use select to reorder column sequences, with id column in the first.

```{r}
MC2_nodes <- MC2_node %>% 
  select(id,-shpcountry, -rcvcountry) 

glimpse(MC2_nodes)
```

### Edges

-   Examine the missing values and features format in Edge data.

-   Use select to drop three "value-" columns with lots of NA, and drop "dataset" which is no need.

-   The arrivaldate is treated as "Character" data type instead of date data type. Need to change the data type back to "Date"" data type.

-   Create a column Year as factor format since Date is too detailed for analysis

```{r}
MC2_edge <- as_tibble(MC2$links) 

colSums(is.na(MC2_edge))

glimpse(MC2_edge)
```

The organized data frame of edge is as below:

```{r}
MC2_edges <- MC2_edge%>%
  mutate(arrival_date  = ymd(arrivaldate )) %>% 
# Also create a column Year as factor format
  mutate(Year = as.factor(year(arrivaldate))) %>%
  select(source, target, arrival_date, Year, hscode, weightkg) %>% distinct()

glimpse(MC2_edges)
```

| **Col name**      | Description                                                                                                           |
|-----------------|-------------------------------------------------------|
| arrival_date/Year | Date/Year the shipment arrived at port                                                                                |
| hscode            | Harmonized System code (commodity code) for the shipment                                                              |
| weightkg          | The weight of the shipment in kilograms                                                                               |
| Source/ target    | Some shipper(source) and receiver names/countries(target) was anonymized, so some are represented by numerical names. |

# Temporal pattern

## Interrupted pattern

The edges include records from 2028 to 2034, filter companies with higher numbers of shipment (here is weight \> 100) in the first two years 2028 and 2029.

Then by following these steps, we can identify companies with high shipment records in the specified years and evaluate whether there are any anomalies in their temporal patterns.

1.  Calculate the distinct number of years for each company.

2.  Determine the maximum and minimum year for each company to calculate the number of periods.

3.  Filter the companies that have missing records in several years.

```{r}
MC2_edge_high <- MC2_edges %>%
  filter(Year %in% c(2028, 2029)) %>%
  group_by(source,Year) %>%
  summarise(weight = n(),.groups = "drop") %>%
  filter(weight > 100)

MC2_edge_abnormal <- MC2_edges%>%
  filter(source %in% MC2_edge_high$source) %>% 
  group_by(source) %>% 
  mutate(distinct_year = n_distinct(Year)) %>% 
  mutate(Year = as.numeric(as.character(Year))) %>%
  group_by(source,distinct_year) %>% 
  summarize(max_year = max(Year), min_year = min(Year),.groups = "drop") %>% 
  mutate(period = max_year-min_year+1) %>% 
  filter(period >1) %>% 
  filter(period - distinct_year>2 )

glimpse(MC2_edge_abnormal)
```

Filter only the sources that were identified as abnormal in the previous step, and calculate the Weight and out-degree of each company by year.

```{r}
# heatmap for weight 
MC2_node_abnor <- MC2_edges %>%
  filter(source %in% MC2_edge_abnormal$source) %>%  
  group_by(source,Year) %>%
  summarise(Weight = n(), .groups = "drop")

g1 <- ggplot(MC2_node_abnor, aes(Year,source)) +
  geom_tile(aes(fill = Weight)) +
  geom_text(aes(label = Weight),size = 3) +
  labs(title = "Irregular pattern by Weight")+
  scale_fill_gradient(low = "white", high = "red")+
  # adjust angle to be 45 to avoid overlapping
  theme(axis.text.x = element_text(angle = 45, hjust = 1))+
  theme(axis.text.y = element_text(size = 7))

# heatmap for out-degree connections
MC2_node_abno <- MC2_edges %>%
  filter(source %in% MC2_edge_abnormal$source) %>%  
  group_by(source, target,Year) %>% 
  summarize(.groups = "drop") %>% 
  group_by(source,Year) %>% 
  summarize(Weight = n(), .groups = "drop")


g2 <- ggplot(MC2_node_abno, aes(Year,source)) +
  geom_tile(aes(fill = Weight)) +
  geom_text(aes(label = Weight),size = 3) +
  scale_fill_gradient(low = "white", high = "red")+
  # adjust angle to be 45 to avoid overlapping
  theme(axis.text.x = element_text(angle = 45, hjust = 1))+
  theme(axis.text.y = element_text(size = 7))+
  labs(title = "Irregular pattern by Out Degree")

ggarrange(g1, g2, nrow = 2)
```

We can observe these companies experienced a peak in the weight of shipments during the years 2028 and 2029. However, there is a substantial gap in their shipment records for several years, and shipments resumed with a significantly lower number of shipments per year.

Furthermore, when examining the number of companies these companies ship out to, it becomes evident that both Omo River and Ocean Explorers have experienced a significant drop in the number of outbound connections to other companies. On the other hand, the remaining companies generally have less than five outbound connections each.

## Pattern by Year

-   Filter edges that include the above companies either in target or source, to see the business pattern of these companies.

-   Filter node data to ensure that the nodes include only the source and target values in MC2_edge_irregular .

```{r}
MC2_edge_irregular <- MC2_edges %>% 
  filter(source %in% MC2_node_abnor$source | target %in% MC2_node_abnor$source) %>% 
  group_by(source,target,Year,hscode) %>% 
  summarise(Weight = n(),.groups = "drop") %>% 
  rename(from = source) %>%
  rename(to = target) 

id1 <- MC2_edge_irregular %>%
  select(from) %>%
  rename(id = from)
id2 <- MC2_edge_irregular %>%
  select(to) %>%
  rename(id = to)
MC2_node_abnormal <- rbind(id1, id2) %>%
  distinct()

MC2_graph_abnormal <- tbl_graph(nodes = MC2_node_abnormal,
                       edges = MC2_edge_irregular,
                       directed = TRUE)

MC2_graph_abnormal
```

In 2028 and 2029, the companies exhibit a dense network of interconnected relationships. However, this connectivity is disrupted from 2029, only remain connections within small clusters. We can also see that the network connection patterns are very different in each year.

```{r}
ggraph(MC2_graph_abnormal,
       layout = "fr") +
  geom_edge_link(aes()) +
  geom_node_point(aes(),color = "blue", size = 1) +
  facet_edges(~Year)+
  labs(title = "Pattern by Year")+
  theme(plot.title = element_text(size = 16, face = "bold"))
```

## Interconnection pattern

-   Add a new column of width in edge data, which takes log to reduce the range of values, and then square the result to amplify the edges with higher weight.

-   Group nodes into "irregular" that without records for several years, and "others" that have business relationships with those irregular companies.

```{r}
MC2_edge_irregular <- MC2_edge_irregular %>% 
  mutate(width = log((Weight))^2)
         
nodes <- MC2_node_abnormal %>%
  mutate(group = ifelse(id %in% MC2_node_abnor$source, "irregular", "other"))

plot <- visNetwork(nodes, MC2_edge_irregular, main = "Overall Business pattern") %>%
  visIgraphLayout(layout = "layout_with_fr") %>% 
  visEdges(arrows = "to", 
           smooth = list(enabled = TRUE, 
                         type = "curvedCW")) %>%
  visLegend() %>%
  visGroups(groupname="irregular", color="orange") %>% 
  visGroups(groupname="other", color="green") %>%
    visOptions(highlightNearest = TRUE,nodesIdSelection = TRUE,
               selectedBy="group") %>% 
  visLayout(randomSeed = 123)
plot
```

Although there are irregular companies that both receive and send out shipments to others, it is noteworthy that these companies exhibit higher weights in the sending out edges, which suggests their potential roles as fishers. Besides, some irregular companies send out shipments to the same receiving companies, indicating a potential pattern of collaboration among these entities.
